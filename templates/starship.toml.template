# Starship configuration
# Generated from template for user: {{USER_NAME}}

# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# Inserts a blank line between shell prompts
add_newline = true

# Wait 10 milliseconds for starship to check files under the current directory.
scan_timeout = 10

# Timeout for commands executed by starship (in milliseconds).
command_timeout = 1000

# Format string for the prompt
format = """
[┌──](bold green)$os$username$hostname$directory$git_branch$git_status$git_state$git_metrics$cmd_duration$jobs
[└─](bold green)$character"""

# Right side format (disabled by default)
# right_format = ""

[os]
disabled = false
style = "bold blue"

[os.symbols]
Alpaquita = "🔔 "
Alpine = "🏔️ "
Amazon = "🙂 "
Android = "🤖 "
Arch = "🎗️ "
Artix = "🎗️ "
CentOS = "💠 "
Debian = "🌀 "
DragonFly = "🐉 "
Emscripten = "🔗 "
EndeavourOS = "🚀 "
Fedora = "🎩 "
FreeBSD = "😈 "
Garuda = "🦅 "
Gentoo = "🗜️ "
HardenedBSD = "🛡️ "
Illumos = "🐦 "
Linux = "🐧 "
Macos = "🍎 "
Manjaro = "🥭 "
Mariner = "🌊 "
MidnightBSD = "🌘 "
Mint = "🌿 "
NetBSD = "🚩 "
NixOS = "❄️ "
OpenBSD = "🐡 "
openSUSE = "🦎 "
OracleLinux = "🦴 "
Pop = "🍭 "
Raspbian = "🍓 "
Redhat = "🎩 "
RedHatEnterprise = "🎩 "
Redox = "🧪 "
Solus = "⛵ "
SUSE = "🦎 "
Ubuntu = "🎯 "
Unknown = "❓ "
Windows = "🪟 "

[username]
show_always = false
style_user = "bold yellow"
style_root = "bold red"
format = "[$user]($style) "

[hostname]
ssh_only = true
style = "bold green"
format = "on [$hostname]($style) "

[directory]
style = "bold cyan"
format = "in [$path]($style)[$read_only]($read_only_style) "
truncation_length = 3
truncation_symbol = "…/"
read_only = "🔒"
read_only_style = "red"

[directory.substitutions]
"Documents" = "📄 "
"Downloads" = "⬇️ "
"Music" = "🎵 "
"Pictures" = "📷 "
"Videos" = "🎬 "

[git_branch]
style = "bold purple"
format = "on [$symbol$branch]($style) "
symbol = "🌱 "

[git_status]
style = "bold red"
format = "[$all_status$ahead_behind]($style) "
conflicted = "🏳"
ahead = "🏎💨"
behind = "😰"
diverged = "😵"
up_to_date = "✓"
untracked = "🤷"
stashed = "📦"
modified = "📝"
staged = "➕"
renamed = "👅"
deleted = "🗑"

[git_state]
format = '\([$state( $progress_current/$progress_total)]($style)\) '
style = "bright-black"

[git_metrics]
added_style = "bold blue"
deleted_style = "bold red"
only_nonzero_diffs = true
format = "([+$added]($added_style) )([-$deleted]($deleted_style) )"
disabled = false

[cmd_duration]
min_time = 2000
style = "bold yellow"
format = "took [$duration]($style) "

[jobs]
style = "bold red"
format = "[$symbol$number]($style) "
symbol = "⚡"
number_threshold = 1

[character]
success_symbol = "[❯](bold green)"
error_symbol = "[❯](bold red)"
vimcmd_symbol = "[❮](bold green)"

# Language and tool specific modules
[nodejs]
format = "via [⬢ $version](bold green) "
detect_files = ["package.json", ".nvmrc"]
detect_folders = ["node_modules"]

[python]
format = 'via [🐍 $version $virtualenv]($style) '
detect_extensions = ["py"]
detect_files = [".python-version", "Pipfile", "__init__.py", "pyproject.toml", "requirements.txt", "setup.py", "tox.ini"]
detect_folders = []

[ruby]
format = "via [💎 $version]($style) "
detect_extensions = ["rb"]
detect_files = ["Gemfile", ".ruby-version"]
detect_folders = []

[rust]
format = "via [⚙️ $version](red bold) "
detect_extensions = ["rs"]
detect_files = ["Cargo.toml"]

[golang]
format = "via [🐹 $version](bold cyan) "
detect_extensions = ["go"]
detect_files = ["go.mod", "go.sum", "glide.yaml", "Gopkg.yml", "Gopkg.lock", ".go-version"]
detect_folders = ["Godeps"]

[java]
format = "via [☕ $version](red dimmed) "
detect_extensions = ["java", "class", "gradle", "jar", "cljs", "cljc"]
detect_files = ["pom.xml", "build.gradle.kts", "build.sbt", ".java-version", ".deps.edn", "project.clj", "build.boot"]

[docker_context]
format = "via [🐋 $context](blue bold) "
only_with_files = true
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
detect_folders = []

[kubernetes]
format = 'on [⛵ ($user on )($cluster in )$context \($namespace\)](dimmed green) '
disabled = false
detect_files = ["k8s"]
detect_extensions = ["yaml", "yml"]

[aws]
format = 'on [$symbol($profile )(\($region\) )(\[$duration\] )]($style)'
symbol = "☁️  "
style = "bold blue"
disabled = false

[gcloud]
format = 'on [$symbol$account(@$domain)(\($region\))]($style) '
symbol = "☁️  "
style = "bold blue"
disabled = false

[terraform]
format = "via [💠 $version$workspace]($style) "
detect_extensions = ["tf", "tfplan", "tfstate"]
detect_files = []

[package]
format = "is [📦 $version]($style) "
style = "208 bold"
display_private = false
disabled = false

[time]
disabled = true
format = '🕙[\[ $time \]]($style) '
style = "bold yellow"
utc_time_offset = "local"

[battery]
full_symbol = "🔋 "
charging_symbol = "⚡️ "
discharging_symbol = "💀 "
unknown_symbol = "❓ "
empty_symbol = "❗ "

[[battery.display]]
threshold = 15
style = "bold red"

[[battery.display]]
threshold = 50
style = "bold yellow"

[[battery.display]]
threshold = 80
style = "bold green"